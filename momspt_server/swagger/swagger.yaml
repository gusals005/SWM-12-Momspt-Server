openapi: 3.0.0
info:
  version: 0.0.1
  title: Momspt service server API(21.09.15)
  description: 맘스피티 어플리케이션의 API 리스트입니다.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT.html
  contact:
    name: HyunminLee
    email: gusals005@gmail.com
servers:
  - url: 'http://localhost:3000/'
paths:
  /user/signup:
    post:
      summary: 회원가입 API
      description: 처음 유저를 생성할 때 사용되는 회원가입 API입니다.
      tags:
        - User
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 회원가입 요청 시 request 양식
          required: true
          schema:
            $ref: '#/Requests/Signup'
      responses:
        '201':
          $ref: '#/components/responses/SignupSuccess201'
        '400':
          $ref: '#/components/responses/BadRequestUserExist400'
  /user/login:
    post:
      summary: 로그인 API
      description: 로그인 시 작동하는 API입니다.
      tags:
        - User
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Login 시 request 형식
          required: true
          schema:
            $ref: '#/Requests/Login'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess200'
        '400':
          $ref: '#/components/responses/BadRequestUserExist400'
  /user/nicknameduplicate?nickname={nickname}:
    get:
      summary: 닉네임 중복 검사 API
      description: 회원가입 시 닉네임이 중복인지 체크하는 API입니다.
      tags:
        - User
      consumes:
        - application/json
      parameters:
        - in: query
          name: nickname
          description: 닉네임 중복 검사 시 query의 내용
          required: true
          schema:
            $ref: '#/Requests/Nickname'
      responses:
        '200':
          $ref: '#/components/responses/NicknameDuplicateSuccess'
        '400':
          $ref: '#/components/responses/NicknameDuplicateBad'

  /user/daycomment:
    get:
      summary: 오늘의 D-day와 Comment 제공
      description: 임신한 후 날짜와 운동 Comment에 대해서 제공을 받는 API
      tags:
        - Home
      consumes:
        - application/json
      parameters:
        - in: header
          name: KakaoToken
          required: true
          example: oYrz6zcyIVrNg_q3YefCDiN7FJvPOCh6CAkuSworDNMAAAF7yNc8mA
      responses:
        '200':
          $ref: '#/components/responses/DayComment200'
        '400':
          $ref: '#/components/responses/DayComment400'
        '401':
          $ref: '#/components/responses/KakaoBad401'


components:
  parameters: null
  schemas:
    User:
      type: object
      required:
        - _id
        - name
      properties:
        _id:
          type: number
          description: id
        name:
          type: string
          description: 유저 이름
  responses:
    Success200:
      description: 올바른 요청입니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: true
            message: 정상적으로 처리되었습니다.
    SignupSuccess201:
      description: 요청하신 데이터로 회원정보를 생성합니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/signup201'
    BadRequestUserExist400:
      description: 해당 정보를 가진 유저가 존재합니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: false
            message: 해당 kakaoId를 가진 유저가 존재합니다.
    LoginSuccess200:
      description: 로그인을 성공하였습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/login200'
    NicknameDuplicateSuccess:
      description: 중복된 닉네임이 없습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: true
            message: 중복된 닉네임이 없습니다.
    NicknameDuplicateBad:
      description: 해당 닉네임이 중복되었습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: false
            message: 해당 닉네임를 가진 유저가 존재합니다.
    DayComment200:
      description: 올바른 요청이므로 정보를 제공합니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/daycomment200'
    DayComment400:
      description: 해당 정보를 가진 유저가 없습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: false
            message: 해당 정보를 가진 유저가 없습니다.
    KakaoBad401:
      description: 카카오 인증이 되어 있지 않습니다.
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: false
            message: 카카오 인증이 유효하지 않습니다.
    InternalServerError:
      description: 서버 에러
      content:
        application/json:
          schema:
            $ref: '#/components/ResponseFormat/baseFormat'
          example:
            success: false
            message: 서버 내부 오류
  ResponseFormat:
    baseFormat:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    signup201: 
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/Requests/Signup'
    login200:
      type: object
      properties:
        success: 
          type: boolean
        user:
          $ref: '#/Requests/Signup'
    daycomment200:
      type: object
      properties:
        success:
          type: boolean
        dayAfterBabyDue:
          type: number
          format: integer
          example: 25
        comment:
          type: string
          example: 임신 기간 중 약화된 근력과 체형\n 변형으로 뻣뻣해진 관절의 유연성\n을 회복시켜주는 가벼운 스트레칭부터 시작

tags:
  - name: User
    description: 유저의 생성/수정과 관련된 API들 모음
  - name: Home
    description: 홈 탭에서 쓰이는 API 모음

Requests:
  Signup:
    type: object
    properties:
      nickname:
        type: string
        example: fitsionary
      babyDue:
        type: string
        format: date
        example: "2021-09-15"
      weightBeforePregnancy:
        type: number
        format: "double"
        example: 54.6
      weightNow:
        type: number
        format: double
        example: 58.3
      heightNow:
        type: number
        format: double
        example: 164.3
      kakaoId:
        type: number
        format: integer
        example: 1896724603
  Login:
    type: object
    properties:
      kakaoId:
        type: number
        format: integer
        example: 1896724603
  Nickname:
    type: object
    properties:
      nickname:
        type: string
        format: string
        example: fitsionary
